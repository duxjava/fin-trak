version: '3.8'

services:
  # PostgreSQL база данных
  postgres:
    image: postgres:15-alpine
    container_name: personal_finance_postgres
    environment:
      POSTGRES_DB: personal_finance
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - personal_finance_network
    restart: unless-stopped

  # Redis для кэширования
  redis:
    image: redis:7-alpine
    container_name: personal_finance_redis
    ports:
      - "6379:6379"
    networks:
      - personal_finance_network
    restart: unless-stopped

  # Go бэкенд
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: personal_finance_backend
    environment:
      - DB_URL=postgres://postgres:password@postgres:5432/personal_finance?sslmode=disable
      - REDIS_ADDR=redis:6379
      - REDIS_PASSWORD=
      - PORT=8080
      - GIN_MODE=release
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
    networks:
      - personal_finance_network
    restart: unless-stopped
    volumes:
      - ./backend:/app
      - /app/vendor

  # React фронтенд
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: personal_finance_frontend
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:8080
    depends_on:
      - backend
    networks:
      - personal_finance_network
    restart: unless-stopped
    volumes:
      - ./frontend:/app
      - /app/node_modules

  # Nginx для проксирования (опционально)
  nginx:
    image: nginx:alpine
    container_name: personal_finance_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    networks:
      - personal_finance_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  personal_finance_network:
    driver: bridge