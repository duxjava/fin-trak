name: PR Preview Environment

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # –°–æ–∑–¥–∞–Ω–∏–µ preview –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è PR
  deploy-preview:
    name: Deploy PR Preview
    runs-on: ubuntu-latest
    if: github.event.action != 'closed'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push preview images
      run: |
        # –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ç–µ–≥–∏ –¥–ª—è PR
        PR_TAG="pr-${{ github.event.number }}"
        
        # –°–æ–±–∏—Ä–∞–µ–º backend
        docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-backend:$PR_TAG ./backend
        docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-backend:$PR_TAG
        
        # –°–æ–±–∏—Ä–∞–µ–º frontend
        docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-frontend:$PR_TAG ./frontend
        docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-frontend:$PR_TAG

    - name: Deploy preview environment
      run: |
        echo "Deploying preview environment for PR #${{ github.event.number }}"
        echo "Backend: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-backend:pr-${{ github.event.number }}"
        echo "Frontend: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-frontend:pr-${{ github.event.number }}"
        
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–µ–ø–ª–æ—è preview –æ–∫—Ä—É–∂–µ–Ω–∏—è
        # –ù–∞–ø—Ä–∏–º–µ—Ä, —Å–æ–∑–¥–∞–Ω–∏–µ namespace –≤ Kubernetes –∏–ª–∏ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ docker-compose —Å—Ç–µ–∫–∞
        
        # –ü—Ä–∏–º–µ—Ä –¥–ª—è Kubernetes:
        # kubectl create namespace pr-${{ github.event.number }}
        # helm install pr-${{ github.event.number }} ./helm-chart \
        #   --namespace pr-${{ github.event.number }} \
        #   --set image.tag=pr-${{ github.event.number }}
        
        # –ü—Ä–∏–º–µ—Ä –¥–ª—è Docker Compose:
        # COMPOSE_PROJECT_NAME=pr-${{ github.event.number }} \
        # BACKEND_IMAGE=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-backend:pr-${{ github.event.number }} \
        # FRONTEND_IMAGE=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-frontend:pr-${{ github.event.number }} \
        # docker-compose up -d

    - name: Comment PR with preview URL
      uses: actions/github-script@v6
      with:
        script: |
          const prNumber = context.payload.pull_request.number;
          const previewUrl = `https://pr-${prNumber}.preview.yourdomain.com`;
          
          const comment = `üöÄ **Preview Environment Ready!**
          
          Your PR has been deployed to a preview environment:
          - **Frontend**: ${previewUrl}
          - **Backend API**: ${previewUrl}/api
          
          This preview will be automatically updated when you push new commits to this PR.
          
          <details>
          <summary>Deployment Details</summary>
          
          - **Backend Image**: \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-backend:pr-${prNumber}\`
          - **Frontend Image**: \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-frontend:pr-${prNumber}\`
          - **Commit**: ${context.sha}
          
          </details>`;
          
          github.rest.issues.createComment({
            issue_number: prNumber,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

  # –û—á–∏—Å—Ç–∫–∞ preview –æ–∫—Ä—É–∂–µ–Ω–∏—è –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ PR
  cleanup-preview:
    name: Cleanup PR Preview
    runs-on: ubuntu-latest
    if: github.event.action == 'closed'
    
    steps:
    - name: Cleanup preview environment
      run: |
        echo "Cleaning up preview environment for PR #${{ github.event.number }}"
        
        # –£–¥–∞–ª—è–µ–º Docker –æ–±—Ä–∞–∑—ã
        PR_TAG="pr-${{ github.event.number }}"
        
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –æ—á–∏—Å—Ç–∫–∏ preview –æ–∫—Ä—É–∂–µ–Ω–∏—è
        # –ù–∞–ø—Ä–∏–º–µ—Ä, —É–¥–∞–ª–µ–Ω–∏–µ namespace –≤ Kubernetes –∏–ª–∏ docker-compose —Å—Ç–µ–∫–∞
        
        # –ü—Ä–∏–º–µ—Ä –¥–ª—è Kubernetes:
        # kubectl delete namespace pr-${{ github.event.number }}
        
        # –ü—Ä–∏–º–µ—Ä –¥–ª—è Docker Compose:
        # COMPOSE_PROJECT_NAME=pr-${{ github.event.number }} docker-compose down -v
        # docker image rm ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-backend:$PR_TAG || true
        # docker image rm ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-frontend:$PR_TAG || true

    - name: Comment PR about cleanup
      uses: actions/github-script@v6
      with:
        script: |
          const prNumber = context.payload.pull_request.number;
          
          const comment = `üßπ **Preview Environment Cleaned Up**
          
          The preview environment for this PR has been automatically removed.`;
          
          github.rest.issues.createComment({
            issue_number: prNumber,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });